@using ClipShare.Shared.Models 
@inject IClipboardService ClipboardService
@inject IToastService ToastService
@inject HttpClient HttpClient

<div class="floating-button bg-primary text-white" title="Add Clip" @onclick="AddClip">
    <i class="oi oi-plus"></i>
</div>



@code {

    [Parameter]
    public EventCallback<Clip> OnClipAdded { get; set; }

    public async Task AddClip()
    {
        var currentContent = await ClipboardService.GetClipboardText();
        if (string.IsNullOrWhiteSpace(currentContent))
        {
            ToastService.ShowToast("Clipboard is empty.", TimeSpan.FromSeconds(3), "bg-warning");
            return;
        }
        if (currentContent.Length > Clip.MaxContentLength)
        {
            ToastService.ShowToast("Clipboard is too large.", TimeSpan.FromSeconds(3), "bg-warning");
            return;
        }
        var response = await HttpClient.PostAsJsonAsync("Clips", currentContent);
        var clip = await response.Content.ReadFromJsonAsync<Clip>();
        if (clip != null)
        {
            await OnClipAdded.InvokeAsync(clip);
        }
    }
} 