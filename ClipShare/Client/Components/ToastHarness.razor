@inject IToastService ToastService

<div class="toast-harness">
    @foreach (var toast in Toasts)
{
    <div class="toast-message @toast.ClassString" style="animation-delay: @(toast.Expiration.TotalMilliseconds.ToString() + "ms"); @toast.StyleOverrides">
            @toast.Message
        </div>
}
</div>

<style>
    .toast-harness {
        position: fixed;
        bottom: 25px;
        right: 25px;
        z-index: 4;
    }


    .toast-message {
        background-color: rgb(25,25,25);
        color: white;
        transform: translate(0, 0);
        padding: 10px;
        margin-top: 10px;
        margin-bottom: 10px;
        opacity: 1;
        color: white;
        border-radius: 5px;
        user-select: none;
        pointer-events: none;
        animation-name: toast-message;
        animation-duration: .5s;
        animation-fill-mode: forwards;
        animation-timing-function: ease-in;
    }

    @@keyframes toast-message {
        from {
            transform: translate(0, 0);
            opacity: 1;
        }

        to {
            transform: translate(calc(100% + 50px), 0);
            opacity: 0;
        }
    }

</style>

@code {

private List<ClipShare.Client.Models.Toast> Toasts { get; set; } = new List<Models.Toast>();

protected override Task OnInitializedAsync()
{
    ToastService.OnToastsChanged += (s, e) =>
    {
        Toasts = ToastService.Toasts;
        StateHasChanged();
    };
    return base.OnInitializedAsync();
}
}
